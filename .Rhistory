m = arr[1]-1
arr2 <- c(m, arr[1:length(arr)-1])
arr - arr2
}
find_dup_2( c(8,2,6,3,7,2,5,1,4) )
find_dup_2 <- function(arr){
arr <- sort(arr)
m = arr[1]-1
arr2 <- c(m, arr[1:length(arr)-1])
arr[(arr - arr2) == 0]
}
find_dup_2( c(8,2,6,3,7,2,5,1,4) )
strsplit("asjdhdj ajsdn 12321k j 213", "")
unlist(strsplit("asjdhdj ajsdn 12321k j 213", ""))
"a" in unlist(strsplit("asjdhdj ajsdn 12321k j 213", ""))
grepl("a",unlist(strsplit("asjdhdj ajsdn 12321k j 213", "")))
any(grepl("a",unlist(strsplit("asjdhdj ajsdn 12321k j 213", ""))))
sum(grepl("a",unlist(strsplit("asjdhdj ajsdn 12321k j 213", ""))))
duplicate_count <- function(text){
dup <- 0
chars <- unlist( strsplit(sapply(text, tolower),"") )
for (ch in unique(chars)) {
s <- sum( grepl(ch, chars) )
if (s > 1) {dup <- dup + 1}
}
dup
}
duplicate_count("")
duplicate_count("Indivisibilities")
f <- rep(1, n)
f <- rep(1, n)
f <- rep(1, 10)
f
n = 10
f <- rep(1/n, n-1)
f
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-2-i) )
f <- f*tmp
}
f
}
going(5)
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-1-i) )
f <- f*tmp
}
f
}
going(5)
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-1-i) )
f <- f*tmp
}
sum(f)
}
going(5)
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-1-i) )
f <- f*tmp
}
1.0 + sum(f)
}
going(5)
going(7)
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-1-i) )
f <- f*tmp
}
round(1.0 + sum(f), digits = 6)
}
going(7)
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-1-i) )
f <- f*tmp
}
floor(1.0 + sum(f), digits = 6)
}
going(7)
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-1-i) )
f <- f*tmp
}
1.0 + sum(f)
}
going(70)
going(700)
going(7000)
going <- function (n) {
f <- rep(1/n, n-1)
for (i in seq(1,n-2)) {
tmp <- c( rep(1,i), rep(1/(n-i),n-1-i) )
f <- f*tmp
}
trunc( (1.0 + sum(f))*1e6)/1e6
}
going(7000)
sum_mul <- function(n, m){
sum( seq(n,m,n) )
}
sum_mul(2,15)
2+4+6+8+10+12+14
sum_mul(2,-5)
sum_mul <- function(n, m){
r = "INVALID"
if (m >= n) { r = sum( seq(n,m,n) ) }
r
}
sum_mul(2,-5)
sum_mul(2,2)
sum_mul(7, 2)
seq(7,2,7)
r = c(1,2,3,4,5)
r[-1]
r[-5]
choose(5,0)
choose(6,1)
?seq
seq(from = 5, length.out = 0)
seq(from = 5, to = 5, length.out = 0)
seq(from = 5, to = 5, length.out = 1)
class(integer(0))
is.null(integer(0))
is.null( seq(from = 5, length.out = 0) )
sapply( 5+seq(1,5), seq(1,5), choose )
?sapply
?mapply
sapply( choose, 5+seq(1,5), seq(1,5) )
sapply( choose, seq(1+5,5+5), seq(1,5) )
?choose\
?choose
mapply( choose, seq(1+5,5+5), seq(1,5) )
mapply( choose, 5+seq(1,5), seq(1,5) )
generate_diagonal <- function(n, l){
if (l == 0) {r <- NULL}
if (n == 0) {
r <- rep(1,l)
} else {
r <- mapply( choose, n+seq(1,l), seq(1,l) )
}
r
}
generate_diagonal(1,10)
generate_diagonal <- function(n, l){
if (l == 0) {r <- NULL}
if (n == 0) {
r <- rep(1,l)
} else {
r <- mapply( choose, n+seq(0,l), seq(0,l) )
}
r
}
generate_diagonal(1,10)
generate_diagonal <- function(n, l){
if (l == 0) {r <- NULL}
if (n == 0) {
r <- rep(1,l)
} else {
r <- mapply( choose, n+seq(0,l-1), seq(0,l-1) )
}
r
}
generate_diagonal(1,10)
generate_diagonal(3,7)
seq(0,-1)
seq(0,5,length.out = 0)
seq(0,5,length.out = 5)
mapply( choose, 5+seq(1,5, length.out = 0), seq(1,5, length.out = 0) )
length( mapply( choose, 5+seq(1,5, length.out = 0), seq(1,5, length.out = 0) ) )
f <- function(t) {1 + 0.5exp(-4t) - 0.5exp(-2t)}
f <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f(1)
f(c(1,2))
(x <- seq(0.0, 1.0, length.out = 10))
x <- seq(0.0, 1.0, length.out = nb+1)
x <- seq(0.0, 1.0, length.out = 11)
x
exEuler <- function(nb) {
f <- function(t) {exp(-4*t)*(exp(2*t) - 2.0)}
h <- 1/nb
x <- seq(0.0, 1.0, length.out = nb+1)
y <- rep(1.0, nb+1)
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k])*h
}
y
}
exEuler(10)
exEuler <- function(nb) {
fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f <- function(t) {exp(-4*t)*(exp(2*t) - 2.0)}
h <- 1/nb
x <- seq(0.0, 1.0, length.out = nb+1)
y <- rep(1.0, nb+1)
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k])*h
}
z <- fex(x)
err <- abs(z - y)/z
trunc( sum(err)/(nb+1) * 1e6 )/1e6
}
exEuler(10)
exEuler <- function(nb) {
fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f <- function(t) {exp(-4*t)*(exp(2*t) - 2.0)}
x <- seq(0.0, 1.0, length.out = nb+1)
y <- rep(1.0, nb+1)
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k])*(x[k+1] - x[k])
}
z <- fex(x)
err <- abs(z - y)/z
trunc( mean(err)*1e6 )/1e6
}
exEuler(10)
exEuler(17)
exEuler <- function(nb) {
fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f <- function(t) {exp(-4*t)*(exp(2*t) - 2.0)}
x <- seq(0.0, 1.0, length.out = nb+1)
y <- c(1.0, rep(0.0, nb))
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k])*(x[k+1] - x[k])
}
z <- fex(x)
err <- abs(z - y)/z
trunc( mean(err)*1e6 )/1e6
}
exEuler(17)
exEuler <- function(nb) {
fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f <- function(t) {exp(-4*t)*(exp(2*t) - 2.0)}
x <- seq(0.0, 1.0, length.out = nb+1)
y <- c(1.0, rep(0.0, nb))
browser()
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k])*(x[k+1] - x[k])
}
z <- fex(x)
err <- abs(z - y)/z
trunc( mean(err)*1e6 )/1e6
}
exEuler(17)
exEuler <- function(nb) {
fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f <- function(t) {exp(-4*t)*(exp(2*t) - 2.0)}
x <- seq(0.0, 1.0, length.out = nb+1)
y <- c(1.0, rep(0.0, nb))
browser()
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k])*(x[k+1] - x[k])
}
z <- fex(x)
err <- abs(z - y)/z
trunc( mean(err)*1e6 )/1e6
}
exEuler(10)
f(1)
y[2]
f(0)
y
z
plot(x,y)
plot(x,z)
exEuler <- function(nb) {
fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f <- function(t,y) {2 - exp(-4*t) - 2*y}
x <- seq(0.0, 1.0, length.out = nb+1)
y <- c(1.0, rep(0.0, nb))
browser()
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k],y[k])*(x[k+1] - x[k])
}
z <- fex(x)
err <- abs(z - y)/z
trunc( mean(err)*1e6 )/1e6
}
exEuler(10)
exEuler <- function(nb) {
fex <- function(t) {1 + 0.5*exp(-4*t) - 0.5*exp(-2*t)}
f <- function(t,y) {2 - exp(-4*t) - 2*y}
x <- seq(0.0, 1.0, length.out = nb+1)
y <- c(1.0, rep(0.0, nb))
for (k in seq(1,nb)) {
y[k+1] <- y[k] + f(x[k],y[k])*(x[k+1] - x[k])
}
z <- fex(x)
err <- abs(z - y)/z
trunc( mean(err)*1e6 )/1e6
}
exEuler(10)
exEuler(17)
clean_mean <- function(sam, cutoff){
m <- mean(sam)
s <- cutoff*sd(sam)
samples <- sam[abs(sam - m) < s]
samples
}
sam <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100)
clean_mean(sam, 3)
mean(sam)
sd(sam)
clean_mean <- function(sam, cutoff){
m <- mean(sam)
s <- cutoff*IQR(sam)
samples <- sam[abs(sam - m) < s]
samples
}
clean_mean(sam, 3)
str(95)
string(95)
?st
?str
?string
character(95)
toString(95)
split(toString(95),"")
a <- "76859"
char.expand(a)
?substr
strsplit(toString(95),"")
solution <- function(n){
l <- unlist( strsplit(toString(n),"") )
l
}
solution(675849)
solution <- function(n){
l <- rev( unlist( strsplit(toString(n),"") ) )
l
}
solution(675849)
a <- ""
a <- a+"l"
a <- a.append("l")
a <- paste(a, "ll")
a
a <- paste(a, "ll")
a
a <- paste0(a, "ll")
a
as.integer("8")
license()
?match.arg
?apropos
file.path("~")
file.path("~", "Desktop/")
Sys.info()
Sys.info()['sysname']
path.expand("~")
dirname("~")
basname("~")
basename("~")
library(rappdirs)
install.packages("rappdirs")
library(rappdirs)
site_data_dir("ggplyr2")
site_data_dir("ggplot2")
normalizePath("~")
setwd("~/Courses/coursera/SPECIALIZATION - Mastering Software Development in R/3_Building R Packages/Week2/testpack")
library(testpack)
?fars_read
library(devtools)
?use_readme_md
setwd("~/Courses/coursera/SPECIALIZATION - Mastering Software Development in R/3_Building R Packages/Week2/testpack")
use_readme_md()
use_vignette("testpack_details")
library(testpack)
---
title: "Package details"
author: "F. Max"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
%\VignetteIndexEntry{Package details}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
```{r setup, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
```
Vignettes are long form documentation commonly included in packages. Because they are part of the distribution of the package, they need to be as compact as possible. The `html_vignette` output type provides a custom style sheet (and tweaks some options) to ensure that the resulting html is as small as possible. The `html_vignette` format:
- Never uses retina figures
- Has a smaller default figure size
- Uses a custom CSS stylesheet instead of the default Twitter Bootstrap style
## Vignette Info
Note the various macros within the `vignette` section of the metadata block above. These are required in order to instruct R how to build the vignette. Note that you should change the `title` field and the `\VignetteIndexEntry` to match the title of your vignette.
## Styles
The `html_vignette` template includes a basic CSS theme. To override this theme you can specify your own CSS in the document metadata as follows:
output:
rmarkdown::html_vignette:
css: mystyles.css
## Figures
The figure sizes have been customised so that you can easily put two images side-by-side.
```{r, fig.show='hold'}
plot(1:10)
plot(10:1)
```
You can enable figure captions by `fig_caption: yes` in YAML:
output:
rmarkdown::html_vignette:
fig_caption: yes
Then you can use the chunk option `fig.cap = "Your figure caption."` in **knitr**.
## More Examples
You can write math expressions, e.g. $Y = X\beta + \epsilon$, footnotes^[A footnote here.], and tables, e.g. using `knitr::kable()`.
```{r, echo=FALSE, results='asis'}
knitr::kable(head(mtcars, 10))
```
Also a quote using `>`:
> "He who gives up [code] safety for [code] speed deserves neither."
([via](https://twitter.com/hadleywickham/status/504368538874703872))
library(knitr)
---
title: "Package details"
author: "F. Max"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
%\VignetteIndexEntry{Package details}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
```{r setup, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
```
Vignettes are long form documentation commonly included in packages. Because they are part of the distribution of the package, they need to be as compact as possible. The `html_vignette` output type provides a custom style sheet (and tweaks some options) to ensure that the resulting html is as small as possible. The `html_vignette` format:
- Never uses retina figures
- Has a smaller default figure size
- Uses a custom CSS stylesheet instead of the default Twitter Bootstrap style
## Vignette Info
Note the various macros within the `vignette` section of the metadata block above. These are required in order to instruct R how to build the vignette. Note that you should change the `title` field and the `\VignetteIndexEntry` to match the title of your vignette.
## Styles
The `html_vignette` template includes a basic CSS theme. To override this theme you can specify your own CSS in the document metadata as follows:
output:
rmarkdown::html_vignette:
css: mystyles.css
## Figures
The figure sizes have been customised so that you can easily put two images side-by-side.
```{r, fig.show='hold'}
plot(1:10)
plot(10:1)
```
You can enable figure captions by `fig_caption: yes` in YAML:
output:
rmarkdown::html_vignette:
fig_caption: yes
Then you can use the chunk option `fig.cap = "Your figure caption."` in **knitr**.
## More Examples
You can write math expressions, e.g. $Y = X\beta + \epsilon$, footnotes^[A footnote here.], and tables, e.g. using `knitr::kable()`.
```{r, echo=FALSE, results='asis'}
knitr::kable(head(mtcars, 10))
```
Also a quote using `>`:
> "He who gives up [code] safety for [code] speed deserves neither."
([via](https://twitter.com/hadleywickham/status/504368538874703872))
browseVignettes(package = "ggplot2")
a <- fars_read('../../Week2/accident_2013.csv.bz2')
object.size(a)
b <- dplyr::sample_n(a, 1000)
object.size(b)
f <- bzfile("accident_9999.csv.bz2")
write.csv(b,f)
fars.sample.data <- dplyr::sample_n(a, 1000)
fars.sample <- dplyr::sample_n(a, 1000)
fars.test.df <- dplyr::sample_n(a, 1000)
use_data(fars.test.df)
colnames(b)
library(testpack)
?data
data("fars.test.df")
head(fars.test.df, 10)
help("data/fars.test.df.rda")
??data/fars.test.df.rda
'??data/fars.test.df.rda'
help("data/fars.test.df.rda")
library(testpack)
help("data/fars.test.df.rda")
??data/fars.test.df.rda
data("fars.test.df")
knitr::opts_chunk$set(
data("fars.test.df"),
collapse = TRUE,
comment = "#>"
)
browseVignettes(package = "ggplot2")
knitr::opts_chunk$set(
data("fars.test.df"),
collapse = TRUE,
comment = "#>"
)
plot(1:10)
plot(10:1)
knitr::kable(head(mtcars, 10))
